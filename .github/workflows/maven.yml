#
name: Java CI with Maven 

env:
  BUILD_TECH: java_maven
  CONTINUE_ON_ERROR: false

on:
  push:
    branches: [ master,main ]
  pull_request:
    branches: [ master,main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:  
  ######Code Checkout######
    - name: Checkout  
      uses: actions/checkout@v2
      
  ######JDK Setup########  
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        
    ######## Build - Maven ########
    
    - name: Build and analyze
      if: ${{ env.BUILD_TECH == 'java_maven' }}
      env: 
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=IamAdonis_simple-java-maven-app
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
      
      
    ###### Sonar -Packages ######
    
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
     ##### Maven- Packages#####     
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
        ########### Sonar gate##########   
        
    - name: Sonar Gate 
      shell : bash
      run: |
        curl --location --request GET 'https://sonarcloud.io/api/measures/component?metricKeys=code_smells,coverage,duplicated_lines_density,vulnerabilities,security_hotspots,critical_violations,bugs&component=IamAdonis_simple-java-maven-app'  --header 'Authorization: Bearer e767ca54617cac3188f0cef8f80a6a43d8211784' | jq '.component.measures' | jq '.[] | {metrics:.metric,value: .value}' > ./Response.json 
        cat ./Response.json
        
        while read Response.json ;
        do
           metric=$(jq -r '.metric' <<< $Response.json)
           value =$(jq -r '.value'<<< $Response.json)
           echo "$metric"
           echo "$value"
           echo "Expected ${metric%.*}"
        done    
          
    ######## Upload Artifact ######
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
          name: artifact 
          path: ${{Github.workspace}}/target/*.jar
          
     ######## Upload Artifact ######
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
          name: Json output
          path: ./Response.json     
          
   ########### JUnit Test with maven ##########   
   
    - name: Test with Maven
      run: mvn -B test --file pom.xml
      
   ########## Jacoco code coverage report ####
   
    - name: upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
          name: jacoco report
          path: target/site/jacoco/
          

        
        
      
